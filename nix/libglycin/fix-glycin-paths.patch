diff --git a/vendor/glycin/.cargo-checksum.json b/vendor/glycin/.cargo-checksum.json
index 934e9ab..b655a70 100644
--- a/vendor/glycin/.cargo-checksum.json
+++ b/vendor/glycin/.cargo-checksum.json
@@ -1 +1 @@
-{"files":{"Cargo.lock":"18c304006ccb5c663861309a9cc7611315af02f110eca06ecd5bedb287e73afb","Cargo.toml":"7ac21d383ca089742d280552c4616b8e7500e18c8722d12c1bca7d9fc8252ed5","LICENSE":"78dcffc5c141fab8667edb50a76ef6dbfb313884686cca7547a32f34138564eb","LICENSE-LGPL-2.1":"cdb29328127167b36d3dbb5de8ee0aab03cb8a473a725c465d89edbb8b9690ad","LICENSE-MPL-2.0":"3f3d9e0024b1921b067d6f7f88deb4a60cbe7a78e76c64e3f1d7fc3b779b9d04","README.md":"3bcf18650783d2995222cba6dd7a3936af844c052abf8572c18a54532b334533","examples/glycin-render.rs":"6186c21d705f553ff4badddee1e238969987dce63b7f0d8ef9aec01abbeb65c5","examples/glycin-rotate-cw.rs":"b22335437981f771ec3466c82ddac6bd7200ee3a061be483c881fb09d5d4dfb0","src/api_common.rs":"94652dc2f38997f721c9a3d03cf03f0df0dd5d8d6d56e09cb46d6bbb7566e8ab","src/api_editor.rs":"a75af37a9ffba3747d45d31d0d033bde5b4a8ac284bd69d9d7c7a80dd4ab1947","src/api_loader.rs":"538d567e3fc786178fad1e56071ed232b2bcb3dcca8a5ca8e9e6ce5b78d79e15","src/config.rs":"199692c9c467ffd1a41f1556662922a05c5bc0c98b212d2b87d3750daa6797e5","src/dbus.rs":"0440b91474b5689c03e96b7096f3cb2865636b17cbdad939f27c764a69297ea8","src/error.rs":"eb1040a3dee9c2bb7a9621f7514575324a02377ed2ccbad32ccb7f838ed6baff","src/fontconfig.rs":"cd2cbaeea556296d5187d94831aa39fea94bcd33d2cecb35760ac3455dd15005","src/gobject.rs":"3a89132c3565a8c66406a680ec686ada62fc1c2b0314db67f534797fdbca420c","src/gobject/frame.rs":"dcd365b9126d217640387a5f88a606a6f1ba6552af3810d1e5992e44d0ab31e2","src/gobject/image.rs":"54fe8ea0573f4be4948bc7d5840ee0a514c6a7517c7d328b8bc03988dc3f8822","src/gobject/loader.rs":"552c174cb80854f63f6513c7e40653c171ff274e7bed4bf7b43dffd030506ffc","src/icc.rs":"b4459231ac8f5083a696d6a1cb1fb0077afe58734516f6b2f87c4c2575f388a2","src/lib.rs":"1c10c61deed333b1b5181d99c395178978b3bd75ec924308016dcd1dd0bb1b33","src/memory_texture_builder.rs":"1f70b6387119d2b7a39127c851cb9bfd476eab7dbf4ffafc2082bd252dcc41d6","src/orientation.rs":"0ab6e3ab2672f439d4845e77bd81f5743302d4480a7b75d017e5572ac396124b","src/sandbox.rs":"d9c83fe605d6b60038f54c836bcf1ffe9fb1845fc6a779298e98e6fa41f59c65","src/util.rs":"2ea6d4c816eef2f9f23f7ceace6b4b98775569ab790b701297e0c6120a93b968"},"package":"37cb9e103cb6b8925bf5e8a1cf8a1166797d8aaefaabd03e68cf6ad7443a1baa"}
\ No newline at end of file
+{"files":{},"package":"37cb9e103cb6b8925bf5e8a1cf8a1166797d8aaefaabd03e68cf6ad7443a1baa"}
diff --git a/vendor/glycin/src/sandbox.rs b/vendor/glycin/src/sandbox.rs
index faa1011..d7ad66c 100644
--- a/vendor/glycin/src/sandbox.rs
+++ b/vendor/glycin/src/sandbox.rs
@@ -207,7 +207,7 @@ impl Sandbox {
 
                 args.push(self.exec());
 
-                ("bwrap".into(), args, Some(seccomp_memfd))
+                ("@bwrap@".into(), args, Some(seccomp_memfd))
             }
             SandboxMechanism::FlatpakSpawn => {
                 let memory_limit = Self::memory_limit();
@@ -304,8 +304,8 @@ impl Sandbox {
                 "/",
                 // Make /usr available as read only
                 "--ro-bind",
-                "/usr",
-                "/usr",
+                "/nix/store",
+                "/nix/store",
                 // Make tmpfs dev available
                 "--dev",
                 "/dev",
